FROM galanton/dt-ros-commons_opencv:rpi32-native

RUN apt-get update && apt-get install -y libyaml-cpp-dev

# Argumens for where the different places from which we will get files from are
ARG aruco_lib_dir=lib/src/aruco
ARG processing_node_dir=ros/src/processing_node
ARG duckietown_msgs_dir=ros/src/duckietown_msgs

RUN mkdir -p /${processing_node_dir}

RUN cd /${processing_node_dir} && wget https://sourceforge.net/projects/raspicam/files/raspicam-0.1.9.zip && \
    unzip raspicam-0.1.9.zip && rm -r raspicam-0.1.9.zip
#COPY ${processing_node_dir}/raspicam-0.1.9 /${processing_node_dir}/raspicam-0.1.9
RUN mkdir /${processing_node_dir}/raspicam-0.1.9/build && cd /${processing_node_dir}/raspicam-0.1.9/build && \
    cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_CXX_FLAGS="-std=c++11" .. && make -j$(nproc) && make install && ldconfig

# Download the ArUco library and fix the bug in it
#COPY ${processing_node_dir}/aruco_bug_fixer.py /${processing_node_dir}/aruco_bug_fixer.py
#RUN cd /${processing_node_dir} && wget https://sourceforge.net/projects/aruco/files/3.1.12/aruco-3.1.12.zip && \
#    unzip aruco-3.1.12.zip && rm -r aruco-3.1.12.zip && python aruco_bug_fixer.py && \
#    mkdir aruco-3.1.12/build && cd aruco-3.1.12/build && \
#    cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_CXX_FLAGS="-std=c++11" .. && make -j$(nproc) && make install && ldconfig
COPY ${processing_node_dir}/aruco-3.1.12 /${processing_node_dir}/aruco-3.1.12
RUN cd /${processing_node_dir} &&    mkdir aruco-3.1.12/build && cd aruco-3.1.12/build && \
    cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_CXX_FLAGS="-std=c++11" .. && make -j$(nproc) && make install && ldconfig

# Copy and build the program files and configure the environment variables
COPY ${duckietown_msgs_dir} /${duckietown_msgs_dir}
COPY ${processing_node_dir}/apriltag_processor_node.cpp /${processing_node_dir}/apriltag_processor_node.cpp
COPY ${processing_node_dir}/CMakeLists.txt /${processing_node_dir}/CMakeLists.txt
COPY ${processing_node_dir}/package.xml /${processing_node_dir}/package.xml
RUN /bin/bash -c "cd /ros/src && source /opt/ros/kinetic/setup.bash && catkin_init_workspace && cd .. && catkin_make "
COPY ${processing_node_dir}/config.yml /${processing_node_dir}/config.yml
COPY ${processing_node_dir}/calibr.yaml /${processing_node_dir}/calibr.yaml
COPY ${processing_node_dir}/launch /${processing_node_dir}/launch
ENV ACQ_CONFIG_YML /${processing_node_dir}/config.yml
ENV ACQ_CALIBR_YAML /${processing_node_dir}/calibr.yaml

# Set optional environment variables
ENV ACQ_ROS_MASTER_URI_DEVICE_PORT 11311
ENV ACQ_ROS_MASTER_URI_SERVER_PORT 11311
#ENV ACQ_TOPIC_RAW camera_node/image/compressed
#ENV ACQ_TOPIC_CAMERAINFO camera_node/camera_info
ENV ACQ_TAG_SIZE 0.065
ENV ACQ_POSES_TOPIC poses
#ENV ACQ_DETECTOR_TYPE DFC
ENV ACQ_IMAGE_PROCESSORS 3

CMD /bin/bash -c "cd /ros && source /opt/ros/kinetic/setup.bash && source devel/setup.bash && \
                  roslaunch processing_node apriltag_processing.launch"