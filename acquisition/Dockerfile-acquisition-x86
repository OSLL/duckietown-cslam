FROM ros:kinetic-ros-core

MAINTAINER Aleksandar Petrov <alpetrov@ethz.ch>

# YOU ALWAYS NEED TO SPECIFY:
# ACQ_ROS_MASTER_URI_DEVICE
# ACQ_ROS_MASTER_URI_DEVICE_IP
# ACQ_ROS_MASTER_URI_SERVER
# ACQ_ROS_MASTER_URI_SERVER_IP
# ACQ_DEVICE_NAME # should match the topic, e.g. watchtower10


# OPTIONALLY YOU CAN ALSO SPECIFY + DEFAULT VALUES
ENV ACQ_ROS_MASTER_URI_DEVICE_PORT 11311
ENV ACQ_ROS_MASTER_URI_SERVER_PORT 11311
ENV ACQ_POSES_UPDATE_RATE 10
ENV ACQ_ODOMETRY_UPDATE_RATE 30
ENV ACQ_STATIONARY_ODOMETRY 0
ENV ACQ_TOPIC_RAW camera_node/image/compressed
ENV ACQ_TOPIC_CAMERAINFO camera_node/camera_info
# ENV ACQ_TOPIC_VELOCITY_TO_POSE velocity_to_pose_node/pose
ENV ACQ_TAG_SIZE 0.065
ENV ACQ_POSES_TOPIC poses
ENV ACQ_ODOMETRY_TOPIC odometry
ENV ACQ_TEST_STREAM 1
ENV ACQ_BEAUTIFY 1
ENV ACQ_APRILTAG_QUAD_DECIMATE 1.0
ENV ACQ_ODOMETRY_POST_VISUAL_ODOMETRY 0
ENV ACQ_ODOMETRY_POST_VISUAL_ODOMETRY_FEATURES SURF

# Argumens for where the different places from which we will get files from are
ARG apriltag_dir=lib-cslam/src/apriltags3-py
ARG visual_odometry_dir=lib-cslam/src/visual_odometry
ARG acquisition_src_dir=ros-cslam/src
ARG algo_dir=lib-cslam/src/duckietown_cslam/algo

# Create a directory to store the Python files and the April tag library
RUN mkdir /acquisition_node

# Install OpenCV and CvBridge
RUN apt-get update && apt-get install -f -y --allow-unauthenticated python-opencv ros-kinetic-cv-bridge ros-kinetic-rospy python-pip; pip install pathos multiprocessing-logging && apt-get clean


# Copy and install the April tag library and configure the environment variables for it
RUN mkdir /acquisition_node/apriltag
COPY ${apriltag_dir}/apriltags /acquisition_node/apriltag
RUN  /bin/bash -c "mkdir /acquisition_node/apriltag/build; cd /acquisition_node/apriltag/build; cmake ..; make install"
COPY ${apriltag_dir}/apriltags3.py /acquisition_node/apriltag/apriltags3.py
ENV ACQ_APRILTAG_LIB /acquisition_node/apriltag/
ENV ACQ_APRILTAG_SO /acquisition_node/apriltag/build/lib

# Copy the Visual Odometry library
RUN mkdir /acquisition_node/visual_odometry
COPY ${visual_odometry_dir} /acquisition_node/visual_odometry
ENV ACQ_VISUAL_ODOMETRY_LIB /acquisition_node/visual_odometry/src/

# Setup the duckietown_msgs
RUN mkdir -p /catkin-ws/src
RUN /bin/bash -c "source /opt/ros/kinetic/setup.bash; cd /catkin-ws/; catkin_make"
COPY ${acquisition_src_dir}/duckietown_msgs /catkin-ws/src/duckietown_msgs
RUN /bin/bash -c "source /catkin-ws/devel/setup.bash; cd /catkin-ws/; catkin_make"

# Copy the Python files
COPY ${acquisition_src_dir}/acquisition_node/acquisitionProcessor.py /acquisition_node
COPY ${algo_dir}/image_rectifier.py /acquisition_node
COPY ${acquisition_src_dir}/acquisition_node/serverSidePublisher.py /acquisition_node
COPY ${acquisition_src_dir}/acquisition_node/acquire_and_publish.py /acquisition_node

# Copy the bash wrapper
COPY ${acquisition_src_dir}/acquisition_node/wrapper.sh /acquisition_node
RUN chmod +x /acquisition_node/*.sh

# Start the processes
CMD /bin/bash -c "cd /acquisition_node; source /catkin-ws/devel/setup.bash; /acquisition_node/wrapper.sh"
